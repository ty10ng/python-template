# PyPI Release Workflow with Trusted Publisher (OIDC)
#
# SETUP INSTRUCTIONS FOR MAINTAINERS:
# 1. Go to https://pypi.org/manage/account/publishing/
# 2. Add a new publisher with these settings:
#    - PyPI Project Name: {{cookiecutter.project_slug}}
#    - Owner: {{cookiecutter.github_username}}
#    - Repository name: {{cookiecutter.project_slug}}
#    - Workflow name: release.yml
#    - Environment name: release (leave blank if not using environments)
# 3. Create the PyPI project first by manually uploading version 0.1.0
# 4. Then enable this workflow for automatic releases

name: Release to PyPI

on:
  # Trigger on tag pushes that look like version numbers
  push:
    tags:
      - 'v*'
  # Trigger on published releases
  release:
    types: [published]

permissions:
  # IMPORTANT: this permission is mandatory for trusted publishing
  id-token: write
  contents: read

jobs:
  build:
    name: Build distribution packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Set up Python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3  # v5.1.0
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a  # v4.3.6
        with:
          name: python-package-distributions
          path: dist/

  publish:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # Only run on tag pushes
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/{{cookiecutter.project_slug}}
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: read

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0  # v1.9.0
        # NOTE: No token needed when using Trusted Publisher OIDC